# Proyecto NTT Data - Generador de Tarjetas

Este proyecto consiste en una aplicaci√≥n web que genera tarjetas de presentaci√≥n personalizadas usando datos aleatorios de usuarios. Est√° dividido en dos partes:

- **Backend**: API construida con Node.js y Express.
- **Frontend**: Aplicaci√≥n web construida con Astro y React.

---

## üõ†Ô∏è Backend (`nttdata-backend/`)

El backend est√° desarrollado con **Node.js** utilizando **Express**. Act√∫a como intermediario entre el frontend y la API p√∫blica [randomuser.me](https://randomuser.me), lo que permite controlar el n√∫mero de usuarios solicitados y validar los datos recibidos.

### Funcionalidades principales

- Endpoint `/users` que acepta un par√°metro de consulta `count`.
- Devuelve la cantidad de usuarios solicitada (por defecto 10).
- Valida que `count` sea un n√∫mero entre 1 y 100.
- Manejo de errores con mensajes claros si se env√≠an datos inv√°lidos.

### Ejemplo de uso

GET http://localhost:3000/users?count=10


### Instalaci√≥n y ejecuci√≥n

```
cd nttdata-backend
npm install
npm run dev
```

**Variables de entorno**

Crea una copia del archivo `.env.local` y ren√≥mbrala a `.env` en `nttdata-backend/` con el siguiente contenido:

```
PORT=3000
API_URL=https://randomuser.me/api/
```

## ‚öõÔ∏è Frontend (`nttdata-frontend/`)

### Estructura del frontend

- **Astro** maneja la estructura general, rutas y layout.
- **React** se usa para el componente generador y para renderizar las tarjetas.

### Componentes

#### `Generator.jsx` (React)

- Input para seleccionar cu√°ntos usuarios mostrar.
- Llama a la API del backend para obtener los datos.
- Renderiza un grupo de tarjetas seg√∫n la cantidad seleccionada.

#### `Card.jsx` (React)

Componente individual que muestra:

- Foto del usuario
- Nombre completo
- G√©nero
- Ubicaci√≥n (ciudad, estado, pa√≠s)
- Correo electr√≥nico
- Fecha de nacimiento (formateada)


#### `index.astro` (Astro)

P√°gina principal que incluye el `Layout` y renderiza el componente `Generator` con `client:load` para que se hidrate con React en el cliente.

### Instalaci√≥n y ejecuci√≥n

```
cd nttdata-frontend
npm install
npm run dev
```

**Variables de entorno**

Crea una copia del archivo `.env.local` y ren√≥mbrala a `.env` en `nttdata-frontend/` con el siguiente contenido:

```
PUBLIC_API_URL=http://localhost:3000/api/users
```